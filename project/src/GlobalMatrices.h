/** This file is generated. Do not edit.
    All matrices are NxN and stored column-major.
    N = CONVERGENCE_ORDER*(CONVERGENCE_ORDER+1)/2. */

#ifndef GLOBALMATRICES_H_
#define GLOBALMATRICES_H_
namespace GlobalMatrices {
#if !defined(CONVERGENCE_ORDER)
#error CONVERGENCE_ORDER must be set.
#elif CONVERGENCE_ORDER == 2
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 3
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 4
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 5
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 6
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 7
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 8
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 9
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 10
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 11
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#elif CONVERGENCE_ORDER == 12
  extern double const Fxm0[];
  extern double const Fxm1[];
  extern double const Fxp0[];
  extern double const Fxp1[];
  extern double const Fym0[];
  extern double const Fym1[];
  extern double const Fyp0[];
  extern double const Fyp1[];
  extern double const KetaT[];
  extern double const Keta[];
  extern double const KxiT[];
  extern double const Kxi[];
  extern double const Minv[];
#endif
}
#endif // GLOBALMATRICES_H_
